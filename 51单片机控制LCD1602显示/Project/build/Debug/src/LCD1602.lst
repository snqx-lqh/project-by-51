C51 COMPILER V9.60.0.0   LCD1602                                                           01/18/2022 16:28:19 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\build\Debug\src\LCD1602.o
COMPILER INVOKED BY: D:\software\Program\Keil5\C51\BIN\C51.exe .\SRC\LCD1602.C PRINT(.\build\Debug\src\LCD1602.lst) OMF2
                    - TABS(4) CODE NOCOND SYMBOLS OPTIMIZE(8,SPEED) SMALL ROM(LARGE) INCDIR(D:\software\Program\Keil5\C51\INC;.\src) DEFINE(_
                    -_UVISION_VERSION=526) OBJECT(.\build\Debug\src\LCD1602.o)

line level    source

   1          #include "LCD1602.h"
   2          /*******************************************************************************
   3          * 函 数 名         : Lcd1602_Delay1ms
   4          * 函数功能         : 延时函数，延时1ms
   5          * 输    入         : c
   6          * 输    出         : 无
   7          * 说    名         : 该函数是在12MHZ晶振下，12分频单片机的延时。
   8          *******************************************************************************/
   9          
  10          void Lcd1602_Delay1ms(uint c)   //误差 0us
  11          {
  12   1          uchar a,b;
  13   1          for (; c>0; c--)
  14   1          {
  15   2               for (b=199;b>0;b--)
  16   2               {
  17   3                  for(a=1;a>0;a--);
  18   3               }      
  19   2          }
  20   1              
  21   1      }
  22          
  23          /*******************************************************************************
  24          * 函 数 名         : LcdWriteCom
  25          * 函数功能         : 向LCD写入一个字节的命令
  26          * 输    入         : com
  27          * 输    出         : 无
  28          *******************************************************************************/
  29          #ifndef     LCD1602_4PINS    //当没有定义这个LCD1602_4PINS时
  30          void LcdWriteCom(uchar com)   //写入命令
  31          {
  32   1          LCD1602_E = 0;     //使能
  33   1          LCD1602_RS = 0;    //选择发送命令
  34   1          LCD1602_RW = 0;    //选择写入
  35   1          
  36   1          LCD1602_DATAPINS = com;     //放入命令
  37   1          Lcd1602_Delay1ms(1);        //等待数据稳定
  38   1      
  39   1          LCD1602_E = 1;            //写入时序
  40   1          Lcd1602_Delay1ms(5);      //保持时间
  41   1          LCD1602_E = 0;
  42   1      }
  43          #else 
  65          /*******************************************************************************
  66          * 函 数 名         : LcdWriteData
  67          * 函数功能         : 向LCD写入一个字节的数据
  68          * 输    入         : dat
  69          * 输    出         : 无
  70          *******************************************************************************/           
  71          #ifndef     LCD1602_4PINS          
  72          void LcdWriteData(uchar dat)            //写入数据
  73          {
  74   1          LCD1602_E = 0;  //使能清零
C51 COMPILER V9.60.0.0   LCD1602                                                           01/18/2022 16:28:19 PAGE 2   

  75   1          LCD1602_RS = 1; //选择输入数据
  76   1          LCD1602_RW = 0; //选择写入
  77   1      
  78   1          LCD1602_DATAPINS = dat; //写入数据
  79   1          Lcd1602_Delay1ms(1);
  80   1      
  81   1          LCD1602_E = 1;   //写入时序
  82   1          Lcd1602_Delay1ms(5);   //保持时间
  83   1          LCD1602_E = 0;
  84   1      }
  85          #else
 107          /*******************************************************************************
 108          * 函 数 名       : LcdInit()
 109          * 函数功能       : 初始化LCD屏
 110          * 输    入       : 无
 111          * 输    出       : 无
 112          *******************************************************************************/           
 113          #ifndef     LCD1602_4PINS
 114          void LcdInit()                        //LCD初始化子程序
 115          {
 116   1          LcdWriteCom(0x38);  //开显示
 117   1          LcdWriteCom(0x0c);  //开显示不显示光标
 118   1          LcdWriteCom(0x06);  //写一个指针加1
 119   1          LcdWriteCom(0x01);  //清屏
 120   1          LcdWriteCom(0x80);  //设置数据指针起点
 121   1      }
 122          #else
 133          
 134          /* 设置显示 RAM 起始地址，亦即光标位置，(x,y)-对应屏幕上的字符坐标 */
 135          void LcdSetCursor(unsigned char x, unsigned char y)
 136          {
 137   1          unsigned char addr;
 138   1      
 139   1          if (y == 0) //由输入的屏幕坐标计算显示 RAM 的地址
 140   1              addr = 0x00 + x; //第一行字符地址从 0x00 起始
 141   1          else
 142   1              addr = 0x40 + x; //第二行字符地址从 0x40 起始
 143   1          LcdWriteCom(addr | 0x80); //设置 RAM 地址
 144   1      }
 145          /* 在液晶上显示字符串，(x,y)-对应屏幕上的起始坐标，str-字符串指针 */
 146          void LcdShowStr(unsigned char x, unsigned char y, unsigned char *str)
 147          {
 148   1          LcdSetCursor(x, y); //设置起始地址
 149   1          while (*str != '\0') //连续写入字符串数据，直到检测到结束符
 150   1          {
 151   2              LcdWriteData(*str++); //先取 str 指向的数据，然后 str 自加 1
 152   2          }
 153   1      }
C51 COMPILER V9.60.0.0   LCD1602                                                           01/18/2022 16:28:19 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION L?0022 (BEGIN)
0000 C2A1              CLR     LCD1602_RW
0002 8F80              MOV     P0,R7
0004 7F01              MOV     R7,#01H
0006 7E00              MOV     R6,#00H
0008 120000      R     LCALL   _Lcd1602_Delay1ms
000B D2A2              SETB    LCD1602_E
000D 7F05              MOV     R7,#05H
000F 7E00              MOV     R6,#00H
             ; FUNCTION _Lcd1602_Delay1ms (BEGIN)
                                           ; SOURCE LINE # 10
;---- Variable 'c' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 11
                                           ; SOURCE LINE # 13
0011         ?C0001:
0011 D3                SETB    C
0012 EF                MOV     A,R7
0013 9400              SUBB    A,#00H
0015 EE                MOV     A,R6
0016 9400              SUBB    A,#00H
0018 4025              JC      ?C0010
                                           ; SOURCE LINE # 14
                                           ; SOURCE LINE # 15
;---- Variable 'b' assigned to Register 'R5' ----
001A 7DC7              MOV     R5,#0C7H
001C         ?C0004:
001C ED                MOV     A,R5
001D D3                SETB    C
001E 9400              SUBB    A,#00H
0020 7480              MOV     A,#080H
0022 9480              SUBB    A,#080H
0024 4012              JC      ?C0003
                                           ; SOURCE LINE # 16
                                           ; SOURCE LINE # 17
;---- Variable 'a' assigned to Register 'R4' ----
0026 7C01              MOV     R4,#01H
0028         ?C0007:
0028 EC                MOV     A,R4
0029 D3                SETB    C
002A 9400              SUBB    A,#00H
002C 7480              MOV     A,#080H
002E 9480              SUBB    A,#080H
0030 4003              JC      ?C0006
0032 1C                DEC     R4
0033 80F3              SJMP    ?C0007
                                           ; SOURCE LINE # 18
0035         ?C0006:
0035 1D                DEC     R5
0036 80E4              SJMP    ?C0004
                                           ; SOURCE LINE # 19
0038         ?C0003:
0038 EF                MOV     A,R7
0039 1F                DEC     R7
003A 70D5              JNZ     ?C0001
003C 1E                DEC     R6
003D         ?C0020:
003D 80D2              SJMP    ?C0001
                                           ; SOURCE LINE # 21
003F         ?C0010:
C51 COMPILER V9.60.0.0   LCD1602                                                           01/18/2022 16:28:19 PAGE 4   

003F 22                RET     
             ; FUNCTION _Lcd1602_Delay1ms (END)

             ; FUNCTION _LcdWriteCom (BEGIN)
                                           ; SOURCE LINE # 30
;---- Variable 'com' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 31
                                           ; SOURCE LINE # 32
0000 C2A2              CLR     LCD1602_E
                                           ; SOURCE LINE # 33
0002 C2A0              CLR     LCD1602_RS
                                           ; SOURCE LINE # 34
                                           ; SOURCE LINE # 36
                                           ; SOURCE LINE # 37
                                           ; SOURCE LINE # 39
                                           ; SOURCE LINE # 40
0004 120000      R     LCALL   L?0022
                                           ; SOURCE LINE # 41
0007 C2A2              CLR     LCD1602_E
                                           ; SOURCE LINE # 42
0009 22                RET     
             ; FUNCTION _LcdWriteCom (END)

             ; FUNCTION _LcdWriteData (BEGIN)
                                           ; SOURCE LINE # 72
;---- Variable 'dat' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 73
                                           ; SOURCE LINE # 74
0000 C2A2              CLR     LCD1602_E
                                           ; SOURCE LINE # 75
0002 D2A0              SETB    LCD1602_RS
                                           ; SOURCE LINE # 76
                                           ; SOURCE LINE # 78
                                           ; SOURCE LINE # 79
                                           ; SOURCE LINE # 81
                                           ; SOURCE LINE # 82
0004 120000      R     LCALL   L?0022
                                           ; SOURCE LINE # 83
0007 C2A2              CLR     LCD1602_E
                                           ; SOURCE LINE # 84
0009 22                RET     
             ; FUNCTION _LcdWriteData (END)

             ; FUNCTION LcdInit (BEGIN)
                                           ; SOURCE LINE # 114
                                           ; SOURCE LINE # 115
                                           ; SOURCE LINE # 116
0000 7F38              MOV     R7,#038H
0002 120000      R     LCALL   _LcdWriteCom
                                           ; SOURCE LINE # 117
0005 7F0C              MOV     R7,#0CH
0007 120000      R     LCALL   _LcdWriteCom
                                           ; SOURCE LINE # 118
000A 7F06              MOV     R7,#06H
000C 120000      R     LCALL   _LcdWriteCom
                                           ; SOURCE LINE # 119
000F 7F01              MOV     R7,#01H
0011 120000      R     LCALL   _LcdWriteCom
                                           ; SOURCE LINE # 120
0014 7F80              MOV     R7,#080H
0016 020000      R     LJMP    _LcdWriteCom
             ; FUNCTION LcdInit (END)
C51 COMPILER V9.60.0.0   LCD1602                                                           01/18/2022 16:28:19 PAGE 5   


             ; FUNCTION _LcdSetCursor (BEGIN)
                                           ; SOURCE LINE # 135
;---- Variable 'addr' assigned to Register 'R3' ----
;---- Variable 'x' assigned to Register 'R7' ----
;---- Variable 'y' assigned to Register 'R5' ----
                                           ; SOURCE LINE # 136
                                           ; SOURCE LINE # 139
0000 ED                MOV     A,R5
0001 7004              JNZ     ?C0014
                                           ; SOURCE LINE # 140
0003 AB07              MOV     R3,AR7
0005 8004              SJMP    ?C0015
0007         ?C0014:
                                           ; SOURCE LINE # 142
0007 EF                MOV     A,R7
0008 2440              ADD     A,#040H
000A FB                MOV     R3,A
000B         ?C0015:
                                           ; SOURCE LINE # 143
000B EB                MOV     A,R3
000C 4480              ORL     A,#080H
000E FF                MOV     R7,A
000F 020000      R     LJMP    _LcdWriteCom
             ; FUNCTION _LcdSetCursor (END)

             ; FUNCTION _LcdShowStr (BEGIN)
                                           ; SOURCE LINE # 146
0000 8B00        R     MOV     str,R3
0002 8A00        R     MOV     str+01H,R2
0004 8900        R     MOV     str+02H,R1
;---- Variable 'y' assigned to Register 'R5' ----
;---- Variable 'x' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 147
                                           ; SOURCE LINE # 148
0006 120000      R     LCALL   _LcdSetCursor
0009         ?C0017:
                                           ; SOURCE LINE # 149
0009 AB00        R     MOV     R3,str
000B AA00        R     MOV     R2,str+01H
000D A900        R     MOV     R1,str+02H
000F 120000      E     LCALL   ?C?CLDPTR
0012 6013              JZ      ?C0019
                                           ; SOURCE LINE # 150
                                           ; SOURCE LINE # 151
0014 0500        R     INC     str+02H
0016 E500        R     MOV     A,str+02H
0018 7002              JNZ     ?C0021
001A 0500        R     INC     str+01H
001C         ?C0021:
001C 14                DEC     A
001D F9                MOV     R1,A
001E 120000      E     LCALL   ?C?CLDPTR
0021 FF                MOV     R7,A
0022 120000      R     LCALL   _LcdWriteData
                                           ; SOURCE LINE # 152
0025 80E2              SJMP    ?C0017
                                           ; SOURCE LINE # 153
0027         ?C0019:
0027 22                RET     
             ; FUNCTION _LcdShowStr (END)

C51 COMPILER V9.60.0.0   LCD1602                                                           01/18/2022 16:28:19 PAGE 6   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
T0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
AC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D6H  1
T1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
T2 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
EXF2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CEH  1
RD . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
INT0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
CY . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D7H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
INT1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
_LcdWriteData. . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  dat. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
RCAP2H . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CBH  1
PS . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BCH  1
SP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0081H  1
LCD1602_RS . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A0H  1
T2EX . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0091H  1
OV . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D2H  1
RCAP2L . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CAH  1
LCD1602_RW . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A1H  1
C_T2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C9H  1
WR . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
LcdInit. . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
RCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CDH  1
TCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CCH  1
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
PCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0087H  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
IE0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
IE1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
B. . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F0H  1
LCD1602_E. . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A2H  1
_LcdWriteCom . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  com. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
_Lcd1602_Delay1ms. . . . . . . . . . .  PUBLIC   CODE   PROC     0011H  -----
  c. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
  a. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0004H  1
  b. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0005H  1
CP_RL2 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C8H  1
_LcdSetCursor. . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  x. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  y. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0005H  1
  addr . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0003H  1
ACC. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E0H  1
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
ET1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ABH  1
C51 COMPILER V9.60.0.0   LCD1602                                                           01/18/2022 16:28:19 PAGE 7   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
ET2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ADH  1
TF1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
TF2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CFH  1
RB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009AH  1
TH0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008CH  1
EX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
TB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009BH  1
EX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
TH2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CDH  1
P. . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D0H  1
SM0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
TL0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008AH  1
SM1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009EH  1
TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
SM2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009DH  1
TL2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CCH  1
PT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
PT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BBH  1
RS0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D3H  1
PT2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BDH  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
RS1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D4H  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
TR2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CAH  1
PX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B8H  1
PX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BAH  1
DPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0083H  1
DPL. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0082H  1
EXEN2. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CBH  1
REN. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009CH  1
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
RXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
TXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
_LcdShowStr. . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  x. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  y. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0005H  1
  str. . . . . . . . . . . . . . . . .  AUTO     DATA   PTR      0000H  3
F0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D5H  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    167    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.60.0.0   LCD1602                                                           01/18/2022 16:28:19 PAGE 8   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
